[version]
path = "src/robotcode/cli/__version__.py"

[build]
dev-mode-dirs = ["src"]

[build.targets.wheel]
only-include = ["src/robotcode"]
sources = ["src"]

[build.targets.sdist]
only-include = ["src", "CHANGELOG.md"]


[envs.default]
installer = "uv"
dependencies = [
  "pytest",
  "pytest-html",
  "pytest_asyncio>=0.23",
  "pytest-rerunfailures",
  "pytest-cov",
  "mypy",
  "ruff",
  "black",
  "debugpy",
  "GitPython",
  "semantic-version",
  "robotremoteserver",
  "apischema",
]
features = ["all"]
pre-install-commands = ["install-packages"]


[envs.default.scripts]
cov = "pytest --cov-report=term-missing --cov-config=pyproject.toml --cov=robotcode --cov=tests {args}"
no-cov = "cov --no-cov {args}"
test = "pytest {args}"
test-reset = "test --regtest2-reset"
install-bundled-editable = "python ./scripts/install_bundled_editable.py"
create-json-schema = "python ./scripts/create_robot_toml_json_schema.py"
generate-rf-options = "python ./scripts/generate_rf_options.py"
install-packages = "python ./scripts/install_packages.py"

[envs.rfmaster]
python = "3.11"
extra-dependencies = [
  "robotframework @ git+https://github.com/robotframework/robotframework.git",
]

[envs.pypy]
python = "pypy3.10"
extra-dependencies = ["robotframework==6.0"]

[envs.rfdevel]
python = "3.11"
post-install-commands = ["pip install -U -e {root:uri}/../robotframework"]

[envs.rfdevel38]
python = "3.8"
post-install-commands = ["pip install -U -e {root:uri}/../robotframework"]

[envs.devel]
python = "3.8"

[[envs.devel.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]
rf = ["rf41", "rf50", "rf60", "rf61", "rf70"]

[envs.devel.overrides]
matrix.rf.dependencies = [
  { value = "robotframework>=4.1.0, <5.0", if = [
    "rf41",
  ] },
  { value = "robotframework>=5.0.0, <6.0", if = [
    "rf50",
  ] },
  { value = "robotframework>6.0.0, <6.1", if = [
    "rf60",
  ] },
  { value = "robotframework>=6.1, <7.0", if = [
    "rf61",
  ] },
  { value = "robotframework>=7.0, <7.1", if = [
    "rf70",
  ] },
]

[envs.hatch-test]
dependencies = ["pytest", "pytest-html", "pytest_asyncio>=0.23", "pyyaml"]
pre-install-commands = ["python ./scripts/install_packages.py"]

[[envs.test.matrix]]
rf = ["rf41", "rf50", "rf60", "rf61", "rf70"]

[envs.test.overrides]
matrix.rf.dependencies = [
  { value = "robotframework>=4.1.0, <5.0", if = [
    "rf41",
  ] },
  { value = "robotframework>=5.0.0, <6.0", if = [
    "rf50",
  ] },
  { value = "robotframework>6.0.0, <6.1", if = [
    "rf60",
  ] },
  { value = "robotframework>=6.1, <7.0", if = [
    "rf61",
  ] },
  { value = "robotframework>=7.0, <7.1", if = [
    "rf70",
  ] },
]

[envs.lint]
python = "3.8"
#skip-install = true
#extra-dependencies = ["tomli>=2.0.0"]
extra-dependencies = [
  "types-PyYAML",
  "types-Pygments",
  "types-colorama",
  "types-docutils",
  "types-setuptools",
]
features = ["all"]


[envs.lint.scripts]
typing-py = "mypy --no-incremental --cache-dir /dev/null {args:.}"
typing = ["typing-py", "npm run compile"]
style = ["ruff check .", "black --check --diff .", "npx eslint ."]
fmt = ["black .", "ruff check --fix .", "style", "npx eslint --fix ."]
all = ["style", "typing"]

[envs.lint.overrides]
platform.windows.scripts = [
  "typing-py=mypy --no-incremental --cache-dir nul {args:.}",
]


[envs.build]
skip-install = true
detached = true
python = "3.8"
dependencies = ["GitPython", "semantic-version", "commitizen", "git-cliff"]

[envs.build.scripts]
update-changelog = ["python scripts/update_changelog.py"]
update-git-versions = ["python scripts/update_git_versions.py"]
update-doc-links = ["python scripts/update_doc_links.py"]
package = ["python scripts/package.py"]
publish = ["python scripts/publish.py"]
extract-release-notes = ["python scripts/extract_release_notes.py"]
is-prerelease = ["python scripts/is_prerelease.py"]
bump = ["cz bump"]
