// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/ubuntu
{
  "name": "robotcode devcontainer",
  "image": "mcr.microsoft.com/devcontainers/base:jammy",
  // Features to add to the dev container. More info: https://containers.dev/features.
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "installZsh": true,
      "configureZshAsDefaultShell": true,
      "installOhMyZsh": true,
      "installOhMyZshConfig": true,
      "upgradePackages": true
    },
    "ghcr.io/devcontainers/features/node:1": {},
    "ghcr.io/devcontainers/features/python:1": {
      "version": "os-provided",
      "installTools": true,
      "optimize": true
    }
    // "ghcr.io/devcontainers/features/desktop-lite:1": {}
  },
  // Or use a Dockerfile or Docker Compose file. More info: https://containers.dev/guide/dockerfile
  //"build": {
  //   "dockerfile": "Dockerfile"
  //},
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],
  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "bash -i -c 'sudo apt update -y && sudo apt upgrade -y && sudo apt install gdb -y && npm install --also-dev && pipx install hatch && hatch config set dirs.env.virtual .hatch && hatch env create devel'",
  // Configure tool-specific properties.
  // "customizations": {},
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-je+-containers-non-root.
  "remoteUser": "vscode",
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "tamasfe.even-better-toml",
        "gruntfuggly.todo-tree",
        "charliermarsh.ruff",
        "ms-python.black-formatter",
        "ms-python.mypy-type-checker",
        "ms-python.debugpy"
      ],
      "settings": {
        "python.testing.pytestArgs": [
          "tests"
        ],
        "python.testing.unittestEnabled": false,
        "python.testing.pytestEnabled": true,
        "files.exclude": {
          "**/__pycache__": true,
          "**/.idea": true,
          "**/.mypy_cache": true,
          "**/.pytest_cache": true,
          "**/.hatch": true,
          "**/.ruff_cache": true
        },
        "files.watcherExclude": {
          "**/__pycache__": true,
          "**/.idea": true,
          "**/.mypy_cache": true,
          "**/.pytest_cache": true,
          "**/.hatch": true,
          "**/.ruff_cache": true
        },
        "python.terminal.activateEnvInCurrentTerminal": true,
        "python.analysis.completeFunctionParens": true,
        "prettier.printWidth": 120,
        "prettier.tabWidth": 4,
        "eslint.format.enable": true,
        "eslint.lintTask.enable": true,
        "git.followTagsWhenSync": true,
        "git.enableSmartCommit": true,
        "python.analysis.diagnosticMode": "workspace",
        "python.venvPath": "${workspaceFolder}/.hatch",
        "ruff.importStrategy": "fromEnvironment",
        "evenBetterToml.schema.associations": {
          "^(.*(/|\\\\)\\.?robot\\.toml|\\.?robot\\.toml)$": "http://localhost:8000/etc/robot.toml.json"
        },
        "mypy-type-checker.importStrategy": "fromEnvironment",
        "debugpy.debugJustMyCode": false,
        "black-formatter.importStrategy": "fromEnvironment",
        "black-formatter.args": [
          "--config",
          "${workspaceFolder}./pyproject.toml"
        ]
      }
    }
  }
}